服务提供者：提供对应的接口实现方法
服务消费者：创建对应的方法接口（表明指向服务提供者），并在控制器中调用
=======================================

服务提供者：

  创建控制器（实现接口内容）
@RestController
public class HelloController {				******
    @GetMapping("/hello/{name}")
    public String index(@PathVariable String name){
        return "this is admin ,hello!" + name;
    }
}
--------------------
  入口文件

@SpringBootApplication
@EnableEurekaClient		
public class AmncloudAdminApplication {

    public static void main(String[] args) {
        SpringApplication.run(AmncloudAdminApplication.class, args);
    }
}
-----------------
pom.xml
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

======================================================
服务消费者：
  接口

@FeignClient(name= "amncloud-admin")				******重点
public interface HelloRemote {
    @GetMapping("/hello/{name}")
    public String hello(@PathVariable("name") String name);
}
------------------------
 控制器

@RestController
public class UcenterController {
    @Autowired						******重点
    HelloRemote helloRemote;

    @GetMapping("/hello/{name}")
    public String index(@PathVariable("name") String name) {
        return helloRemote.hello(name);
    }
}
-------------------------
 入口文件
@SpringBootApplication
@EnableFeignClients   				#注意与服务提供者的不同*********重点
@EnableDiscoveryClient				
public class AmncloudUcenterApplication {

    public static void main(String[] args) {
        SpringApplication.run(AmncloudUcenterApplication.class, args);
    }
}


-------------------
pom.xml
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
        </dependency>
     <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

    

