
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>

GET:
HttpClient httpClient = new HttpClient();					//实例化HttpClient    (org.apache.commons.httpclient.HttpClient）
GetMethod getMethod = new GetMethod("http://localhost:1003/who");		//实例化get方法，传参为网址（org.apache.commons.httpclient.methods.GetMethod;）

getMethod.setRequestHeader("Authorization","admin-admin-admin");		//设置发送时携带的header信息  键值对

httpClient.executeMethod(getMethod);					//发送请求

String msg= getMethod.getResponseBodyAsString().trim();			//接受返回信息
========================================================================
POST:
HttpClient httpClient = new HttpClient();					//实例化HttpClient    (org.apache.commons.httpclient.HttpClient）
PostMethod postMethod = new PostMethod("http://localhost:1003/who");	//实例化get方法，传参为网址（org.apache.commons.httpclient.methods.PostMethod;）

postMethod.setRequestHeader("Authorization","admin-admin-admin");		//设置发送时携带的header信息  键值对

postMethod.addParameter("key","value")					//传参

httpClient.executeMethod(postMethod);					//发送请求

String msg= postMethod.getResponseBodyAsString().trim();			//接受返回信息
========================================================================


封装：

  public String HttpClientPostMethod(String url, String username, String password, String grant_type, String client_id, String client_secret, String scope) {

        HttpClient httpClient = new HttpClient();
        PostMethod postMethod = new PostMethod(url);
        postMethod.addParameter("username", username);
        postMethod.addParameter("password", password);
        postMethod.addParameter("grant_type", grant_type);
        postMethod.addParameter("client_id", client_id);
        postMethod.addParameter("client_secret", client_secret);
        postMethod.addParameter("scope", scope);

        try {
            httpClient.executeMethod(postMethod);
            String responseMsg = postMethod.getResponseBodyAsString().trim();
            JSONObject json1 = JSONObject.fromObject(responseMsg);			
            Map<String, Object> map = json1;
            for (Map.Entry<String, Object> entry : map.entrySet()) {
                System.out.println(entry.getKey() + "=" + entry.getValue());
                if (entry.getKey().equals("access_token")) {
                    return entry.getValue().toString();
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            postMethod.releaseConnection();
        }
        return null;
    }
