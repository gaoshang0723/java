String  定义后大小内容固定，不能被修改  修改后则在内存中不是原来的对象
StringBuffer  可以随意修改




**关于范围  记住包头不包尾
----------------------------------------------------------
增加
sb.append("内容")	//追加内容

sb.insert(位置下标int,"内容") 	//插入内容
---------------------------------------------------------------
修改
sb.reverse()		//反转内容

sb.replace(开始下表int,结束下标int,"内容")  //替换内容

sb.setChatAt(指定下标int,'字符'); 	//替换指定位置字符串
---------------------------------------------------------------------
查看
  
sb.indexOf("匹配内容",开始位置int)	//匹配查找  没有则返回-1，，有则返回下标

sb.lastIndexOf("内容")    //查找最后一个b出现的位置

sb.charAt(下表int)  //查找下表所指的字符

sb.substring(开始位置int,结束位置int)	//截取查看

sb.capacity()		//查看当前StringBuffer的字符数组大小

sb.length()		//查看当前StringBuffer的字符大小

String content=sb.toString();//将sb（当前为StringBuffer）转换成字符串String类型
----------------------------------------------------------------------------
删除
sb.delete(0, 2);       //删除指定范围字符

sb.deleteCharAt(1)	//删除指定字符

=========================================================================================

package com.arr;

public class StringBufferTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*包头不过包尾*/
		StringBuffer sb = new StringBuffer(); //默认创建字符数组为16的字符串，若字符串大小超过16 则增加1倍+2，即16+16+2；
		/*增加*/
		sb.append("abc");  //赋值   abc
//		sb.append("123");  //abc123
//		sb.insert(1, "小明");  //插入值    a小明bc  从第一的位置开始
		/*修改*/
//		sb.reverse();   //反转内容    cba
//		sb.replace(0, 2, "小红22");   //替换修改指定段的字符     小红22c    
//		sb.setCharAt(2, '1');  //单独修改指定字符   注意是单引号！！！双引号报错         ab1
//		System.out.println(sb.substring(0,1));    //截取指定字符串         a
		/*查看*/
//		System.out.println(sb.indexOf("b",2));   //从sb中第2个位置(包括2)开始匹配b字符  ，成功返回下表位置 ，失败返回-1 //  -1
//		System.out.println(sb.lastIndexOf("b"));  //查找最后一个b出现的位置  1 
//		System.out.println(sb.capacity()); //返回字符数组的长度  注意不是字符长度          16
//		System.out.println(sb.length()); //返回字符的长度  注意不是字符数组长度          3
		System.out.println(sb.charAt(1));
		
		/*删除*/
//		sb.delete(0, 2);  //删除指定段的字符   0到2   结果：c    记住：包头不过包尾 （删除了0，1  没有2）
//		sb.deleteCharAt(1);   //删除指定的字符     ac
		
		
		//		System.out.println(sb);
		
		String content=sb.toString();//将sb转换成字符串String类型
		test(content);   //函数需传入字符串，必须将StringBuffer类型的sb转为String  ,否则报错    
		

	}
	public static void test(String str){
		
	}

}
